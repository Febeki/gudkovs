# Generated by Django 4.2 on 2023-04-15 15:54

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import my_app.models


class Migration(migrations.Migration):

    dependencies = [
        ('my_app', '0013_firstname_lastname_passport_patronymic_snils_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, verbose_name='Объект работы')),
            ],
        ),
        migrations.RemoveField(
            model_name='passport',
            name='is_valid',
        ),
        migrations.AddField(
            model_name='member',
            name='is_actual',
            field=models.BooleanField(default=True, verbose_name='Актуальность'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='accusative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Винительный'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='dative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрию"', max_length=16, null=True, verbose_name='Дательный'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='genitive',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Родительный'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='instrumental',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрием"', max_length=16, null=True, verbose_name='Творительный'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='latin',
            field=models.CharField(blank=True, help_text='Например, "Dmitry"', max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Доступны только латинские символы', regex='^[a-zA-Z]+$')], verbose_name='Латиница'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='nominative',
            field=my_app.models.CyrillicCharField(help_text='Например, "Дмитрий"', max_length=16, verbose_name='Именительный'),
        ),
        migrations.AlterField(
            model_name='firstname',
            name='prepositional',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрии"', max_length=16, null=True, verbose_name='Предложный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='accusative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Винительный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='dative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрию"', max_length=16, null=True, verbose_name='Дательный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='genitive',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Родительный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='instrumental',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрием"', max_length=16, null=True, verbose_name='Творительный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='latin',
            field=models.CharField(blank=True, help_text='Например, "Dmitry"', max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Доступны только латинские символы', regex='^[a-zA-Z]+$')], verbose_name='Латиница'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='nominative',
            field=my_app.models.CyrillicCharField(help_text='Например, "Дмитрий"', max_length=16, verbose_name='Именительный'),
        ),
        migrations.AlterField(
            model_name='lastname',
            name='prepositional',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрии"', max_length=16, null=True, verbose_name='Предложный'),
        ),
        migrations.AlterField(
            model_name='member',
            name='birthday',
            field=models.DateField(blank=True, null=True, verbose_name='Дата рождения'),
        ),
        migrations.AlterField(
            model_name='member',
            name='email',
            field=models.EmailField(blank=True, help_text='Например, "worktrackerapp@gmail.com"', max_length=32, null=True, verbose_name='Email'),
        ),
        migrations.AlterField(
            model_name='member',
            name='name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.firstname', verbose_name='Имя'),
        ),
        migrations.AlterField(
            model_name='member',
            name='passport',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='my_app.passport', verbose_name='Паспорт'),
        ),
        migrations.AlterField(
            model_name='member',
            name='patronymic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.patronymic', verbose_name='Отчество'),
        ),
        migrations.AlterField(
            model_name='member',
            name='phone_number',
            field=models.CharField(blank=True, help_text='Например, "+79122414074"', max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате "+7XXXXXXXXXX"', regex='^\\+7\\d{10}$')], verbose_name='Номер телефона'),
        ),
        migrations.AlterField(
            model_name='member',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.role', verbose_name='Роль'),
        ),
        migrations.AlterField(
            model_name='member',
            name='snils',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='my_app.snils', verbose_name='Снилс'),
        ),
        migrations.AlterField(
            model_name='member',
            name='surname',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.lastname', verbose_name='Фамилия'),
        ),
        migrations.AlterField(
            model_name='passport',
            name='department_code',
            field=models.CharField(blank=True, help_text='Например, "123-456"', max_length=7, null=True, validators=[django.core.validators.RegexValidator(message='Код подразделения должен иметь формат XXX-XXX', regex='^\\d{3}-\\d{3}$')], verbose_name='Код подразделения'),
        ),
        migrations.AlterField(
            model_name='passport',
            name='issued_by',
            field=models.CharField(blank=True, help_text='Например, "ГУ МВД РОССИИ ПО СВЕРДЛОВСКОЙ ОБЛАСТИ"', max_length=64, null=True, validators=[django.core.validators.RegexValidator(message='Некорректное значение', regex='^[А-Яа-я\\s\\d.,/-]+$')], verbose_name='Кем выдан'),
        ),
        migrations.AlterField(
            model_name='passport',
            name='issued_date',
            field=models.DateField(blank=True, null=True, verbose_name='Дата выдачи'),
        ),
        migrations.AlterField(
            model_name='passport',
            name='number',
            field=models.CharField(help_text='Например, "123456"', max_length=6, validators=[django.core.validators.RegexValidator(message='Номер паспорта должен состоять из 6 цифр', regex='^\\d{6}$')], verbose_name='Номер'),
        ),
        migrations.AlterField(
            model_name='passport',
            name='series',
            field=models.CharField(help_text='Например, "1234"', max_length=4, validators=[django.core.validators.RegexValidator(message='Серия паспорта должна состоять из 4 цифр', regex='^\\d{4}$')], verbose_name='Серия'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='accusative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Винительный'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='dative',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрию"', max_length=16, null=True, verbose_name='Дательный'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='genitive',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрия"', max_length=16, null=True, verbose_name='Родительный'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='instrumental',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрием"', max_length=16, null=True, verbose_name='Творительный'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='latin',
            field=models.CharField(blank=True, help_text='Например, "Dmitry"', max_length=16, null=True, validators=[django.core.validators.RegexValidator(message='Доступны только латинские символы', regex='^[a-zA-Z]+$')], verbose_name='Латиница'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='nominative',
            field=my_app.models.CyrillicCharField(help_text='Например, "Дмитрий"', max_length=16, verbose_name='Именительный'),
        ),
        migrations.AlterField(
            model_name='patronymic',
            name='prepositional',
            field=my_app.models.CyrillicCharField(blank=True, help_text='Например, "Дмитрии"', max_length=16, null=True, verbose_name='Предложный'),
        ),
        migrations.AlterField(
            model_name='snils',
            name='number',
            field=models.CharField(help_text='Например, "123-456-789 00"', max_length=14, validators=[django.core.validators.RegexValidator(message='Номер СНИЛС должен иметь формат XXX-XXX-XXX XX', regex='^\\d{3}-\\d{3}-\\d{3} \\d{2}$')], verbose_name='Номер СНИЛС'),
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Начало работы')),
                ('end_time', models.TimeField(verbose_name='Конец работы')),
                ('lunch_break', models.DurationField(verbose_name='Продолжительность обеда')),
                ('date', models.DateField(auto_now_add=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.member', verbose_name='Работник')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_app.project', verbose_name='Объект работы')),
            ],
        ),
    ]
